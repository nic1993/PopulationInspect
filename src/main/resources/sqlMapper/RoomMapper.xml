<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.hdu.lab.checkIn.mapper.RoomMapper">
	<resultMap id="BaseResultMap" type="edu.hdu.lab.checkIn.model.Room">
		<id column="ROOM_ID" property="roomId" jdbcType="INTEGER" />
		<result column="BUIL_ID" property="builId" jdbcType="INTEGER" />
		<result column="ROOM_UNIT" property="roomUnit" jdbcType="INTEGER" />
		<result column="ROOM_FLOOR" property="roomFloor" jdbcType="INTEGER" />
		<result column="ROOM_NO" property="roomNo" jdbcType="CHAR" />
		<result column="ROOM_CLASS" property="roomClass" jdbcType="CHAR" />
		<result column="ROOM_SUBCLASS" property="roomSubclass"
			jdbcType="CHAR" />
		<result column="COUNT_INSPECT" property="countInspect"
			jdbcType="INTEGER" />
		<result column="TIME_LASTINSPECT" property="timeLastinspect"
			jdbcType="TIMESTAMP" />
		<result column="REC_LASTINSPECT" property="recLastinspect"
			jdbcType="VARCHAR" />
		<result column="IS_FOCUS" property="isFocus" jdbcType="BIT" />
		<result column="IS_DELETED" property="isDeleted" jdbcType="BIT" />
		<result column="RAMARK" property="ramark" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ROOM_ID, BUIL_ID, ROOM_UNIT, ROOM_FLOOR, ROOM_NO,
		ROOM_CLASS, ROOM_SUBCLASS,
		COUNT_INSPECT,
		TIME_LASTINSPECT,
		REC_LASTINSPECT, IS_FOCUS, IS_DELETED, RAMARK
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="edu.hdu.lab.checkIn.model.RoomExample">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from room
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from room
		where ROOM_ID = #{roomId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from room
		where ROOM_ID = #{roomId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="edu.hdu.lab.checkIn.model.RoomExample">
		delete from room
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="edu.hdu.lab.checkIn.model.Room">
		insert into room (ROOM_ID,
		BUIL_ID, ROOM_UNIT,
		ROOM_FLOOR, ROOM_NO, ROOM_CLASS,
		ROOM_SUBCLASS,
		COUNT_INSPECT, TIME_LASTINSPECT,
		REC_LASTINSPECT, IS_FOCUS, IS_DELETED,
		RAMARK)
		values (#{roomId,jdbcType=INTEGER}, #{builId,jdbcType=INTEGER},
		#{roomUnit,jdbcType=INTEGER},
		#{roomFloor,jdbcType=INTEGER},
		#{roomNo,jdbcType=CHAR}, #{roomClass,jdbcType=CHAR},
		#{roomSubclass,jdbcType=CHAR}, #{countInspect,jdbcType=INTEGER},
		#{timeLastinspect,jdbcType=TIMESTAMP},
		#{recLastinspect,jdbcType=VARCHAR}, #{isFocus,jdbcType=BIT},
		#{isDeleted,jdbcType=BIT},
		#{ramark,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="edu.hdu.lab.checkIn.model.Room">
		insert into room
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roomId != null">
				ROOM_ID,
			</if>
			<if test="builId != null">
				BUIL_ID,
			</if>
			<if test="roomUnit != null">
				ROOM_UNIT,
			</if>
			<if test="roomFloor != null">
				ROOM_FLOOR,
			</if>
			<if test="roomNo != null">
				ROOM_NO,
			</if>
			<if test="roomClass != null">
				ROOM_CLASS,
			</if>
			<if test="roomSubclass != null">
				ROOM_SUBCLASS,
			</if>
			<if test="countInspect != null">
				COUNT_INSPECT,
			</if>
			<if test="timeLastinspect != null">
				TIME_LASTINSPECT,
			</if>
			<if test="recLastinspect != null">
				REC_LASTINSPECT,
			</if>
			<if test="isFocus != null">
				IS_FOCUS,
			</if>
			<if test="isDeleted != null">
				IS_DELETED,
			</if>
			<if test="ramark != null">
				RAMARK,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roomId != null">
				#{roomId,jdbcType=INTEGER},
			</if>
			<if test="builId != null">
				#{builId,jdbcType=INTEGER},
			</if>
			<if test="roomUnit != null">
				#{roomUnit,jdbcType=INTEGER},
			</if>
			<if test="roomFloor != null">
				#{roomFloor,jdbcType=INTEGER},
			</if>
			<if test="roomNo != null">
				#{roomNo,jdbcType=CHAR},
			</if>
			<if test="roomClass != null">
				#{roomClass,jdbcType=CHAR},
			</if>
			<if test="roomSubclass != null">
				#{roomSubclass,jdbcType=CHAR},
			</if>
			<if test="countInspect != null">
				#{countInspect,jdbcType=INTEGER},
			</if>
			<if test="timeLastinspect != null">
				#{timeLastinspect,jdbcType=TIMESTAMP},
			</if>
			<if test="recLastinspect != null">
				#{recLastinspect,jdbcType=VARCHAR},
			</if>
			<if test="isFocus != null">
				#{isFocus,jdbcType=BIT},
			</if>
			<if test="isDeleted != null">
				#{isDeleted,jdbcType=BIT},
			</if>
			<if test="ramark != null">
				#{ramark,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="edu.hdu.lab.checkIn.model.RoomExample"
		resultType="java.lang.Integer">
		select count(*) from room
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update room
		<set>
			<if test="record.roomId != null">
				ROOM_ID = #{record.roomId,jdbcType=INTEGER},
			</if>
			<if test="record.builId != null">
				BUIL_ID = #{record.builId,jdbcType=INTEGER},
			</if>
			<if test="record.roomUnit != null">
				ROOM_UNIT = #{record.roomUnit,jdbcType=INTEGER},
			</if>
			<if test="record.roomFloor != null">
				ROOM_FLOOR = #{record.roomFloor,jdbcType=INTEGER},
			</if>
			<if test="record.roomNo != null">
				ROOM_NO = #{record.roomNo,jdbcType=CHAR},
			</if>
			<if test="record.roomClass != null">
				ROOM_CLASS = #{record.roomClass,jdbcType=CHAR},
			</if>
			<if test="record.roomSubclass != null">
				ROOM_SUBCLASS = #{record.roomSubclass,jdbcType=CHAR},
			</if>
			<if test="record.countInspect != null">
				COUNT_INSPECT = #{record.countInspect,jdbcType=INTEGER},
			</if>
			<if test="record.timeLastinspect != null">
				TIME_LASTINSPECT =
				#{record.timeLastinspect,jdbcType=TIMESTAMP},
			</if>
			<if test="record.recLastinspect != null">
				REC_LASTINSPECT =
				#{record.recLastinspect,jdbcType=VARCHAR},
			</if>
			<if test="record.isFocus != null">
				IS_FOCUS = #{record.isFocus,jdbcType=BIT},
			</if>
			<if test="record.isDeleted != null">
				IS_DELETED = #{record.isDeleted,jdbcType=BIT},
			</if>
			<if test="record.ramark != null">
				RAMARK = #{record.ramark,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update room
		set ROOM_ID = #{record.roomId,jdbcType=INTEGER},
		BUIL_ID =
		#{record.builId,jdbcType=INTEGER},
		ROOM_UNIT =
		#{record.roomUnit,jdbcType=INTEGER},
		ROOM_FLOOR =
		#{record.roomFloor,jdbcType=INTEGER},
		ROOM_NO =
		#{record.roomNo,jdbcType=CHAR},
		ROOM_CLASS =
		#{record.roomClass,jdbcType=CHAR},
		ROOM_SUBCLASS =
		#{record.roomSubclass,jdbcType=CHAR},
		COUNT_INSPECT =
		#{record.countInspect,jdbcType=INTEGER},
		TIME_LASTINSPECT =
		#{record.timeLastinspect,jdbcType=TIMESTAMP},
		REC_LASTINSPECT =
		#{record.recLastinspect,jdbcType=VARCHAR},
		IS_FOCUS =
		#{record.isFocus,jdbcType=BIT},
		IS_DELETED =
		#{record.isDeleted,jdbcType=BIT},
		RAMARK =
		#{record.ramark,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="edu.hdu.lab.checkIn.model.Room">
		update room
		<set>
			<if test="builId != null">
				BUIL_ID = #{builId,jdbcType=INTEGER},
			</if>
			<if test="roomUnit != null">
				ROOM_UNIT = #{roomUnit,jdbcType=INTEGER},
			</if>
			<if test="roomFloor != null">
				ROOM_FLOOR = #{roomFloor,jdbcType=INTEGER},
			</if>
			<if test="roomNo != null">
				ROOM_NO = #{roomNo,jdbcType=CHAR},
			</if>
			<if test="roomClass != null">
				ROOM_CLASS = #{roomClass,jdbcType=CHAR},
			</if>
			<if test="roomSubclass != null">
				ROOM_SUBCLASS = #{roomSubclass,jdbcType=CHAR},
			</if>
			<if test="countInspect != null">
				COUNT_INSPECT = #{countInspect,jdbcType=INTEGER},
			</if>
			<if test="timeLastinspect != null">
				TIME_LASTINSPECT = #{timeLastinspect,jdbcType=TIMESTAMP},
			</if>
			<if test="recLastinspect != null">
				REC_LASTINSPECT = #{recLastinspect,jdbcType=VARCHAR},
			</if>
			<if test="isFocus != null">
				IS_FOCUS = #{isFocus,jdbcType=BIT},
			</if>
			<if test="isDeleted != null">
				IS_DELETED = #{isDeleted,jdbcType=BIT},
			</if>
			<if test="ramark != null">
				RAMARK = #{ramark,jdbcType=VARCHAR},
			</if>
		</set>
		where ROOM_ID = #{roomId,jdbcType=INTEGER}
	</update>

	<update id="updateByPrimaryKey" parameterType="edu.hdu.lab.checkIn.model.Room">
		update room
		set
		BUIL_ID = #{builId,jdbcType=INTEGER},
		ROOM_UNIT =
		#{roomUnit,jdbcType=INTEGER},
		ROOM_FLOOR =
		#{roomFloor,jdbcType=INTEGER},
		ROOM_NO = #{roomNo,jdbcType=CHAR},
		ROOM_CLASS = #{roomClass,jdbcType=CHAR},
		ROOM_SUBCLASS =
		#{roomSubclass,jdbcType=CHAR},
		COUNT_INSPECT =
		#{countInspect,jdbcType=INTEGER},
		TIME_LASTINSPECT =
		#{timeLastinspect,jdbcType=TIMESTAMP},
		REC_LASTINSPECT =
		#{recLastinspect,jdbcType=VARCHAR},
		IS_FOCUS = #{isFocus,jdbcType=BIT},
		IS_DELETED = #{isDeleted,jdbcType=BIT},
		RAMARK =
		#{ramark,jdbcType=VARCHAR}
		where ROOM_ID = #{roomId,jdbcType=INTEGER}
	</update>

	<!-- <resultMap id="RoomSatisMap" type="edu.hdu.edu.hdu.lab.checkIn.dto.RoomSatis"> 
		<result column="IS_OVER_DUE" property="isOverDue" jdbcType="BOOLEAN" /> <result 
		column="PERSON_NUM" property="personNum" jdbcType="INTEGER"/> </resultMap> -->



	<select id="getPesonNumByRoomId" parameterType="Integer"
		resultType="INTEGER">
		SELECT count(*)
		FROM person
		WHERE ROOM_ID =
		#{roomId,jdbcType=INTEGER}
	</select>

	<select id="getOverDueDayNumByRoomId" parameterType="Integer"
		resultType="INTEGER">
		SELECT
		(to_days(Now()) -
		to_days(rm.TIME_LASTINSPECT))-sys.PARA_VALUE
		FROM
		room as rm,sysparam as
		sys
		WHERE
		sys.PARA_NAME='INSPECT_PERIOD' AND
		rm.ROOM_ID =
		#{roomId,jdbcType=INTEGER}
	</select>

	<select id="getOverDueRoomByPoliid" parameterType="Integer"
		resultMap="BaseResultMap">
		select count(distinct r.ROOM_ID)
		from room as r left join building as b
		 on r.BUIL_ID=b.BUIL_ID left join community as
		c on c.COMM_ID=b.COMM_ID left join person as p on p.ROOM_ID=r.ROOM_ID left join sysparam
		as s on s.PARA_ID=p.IS_FOCUS left join roomsysparam as rs on rs.PARA_ID=r.IS_FOCUS
		where
		(c.POLI_ID=#{poliId,jdbcType=INTEGER} or
		b.POLI_ID=#{poliId,jdbcType=INTEGER}) and
		r.BUIL_ID=b.BUIL_ID 
		and c.COMM_ID=b.COMM_ID and
		((to_days(now())-to_days(r.TIME_LASTINSPECT))>s.PARA_VALUE or
		(to_days(now())-to_days(r.TIME_LASTINSPECT))>rs.PARA_VALUE)
	</select>

	<select id="getQuickOverDueRoomByPoliid" parameterType="Integer"
		resultMap="BaseResultMap">
		select distinct r.*  
		from room as r left join building as b
		 on r.BUIL_ID=b.BUIL_ID left join community as
		c on c.COMM_ID=b.COMM_ID left join person as p on p.ROOM_ID=r.ROOM_ID left join sysparam
		as s on s.PARA_ID=p.IS_FOCUS left join roomsysparam as rs on rs.PARA_ID=r.IS_FOCUS
		where
		(c.POLI_ID=#{poliId,jdbcType=INTEGER} or
		b.POLI_ID=#{poliId,jdbcType=INTEGER}) and
		r.BUIL_ID=b.BUIL_ID 
		and c.COMM_ID=b.COMM_ID and
		(((to_days(now())-to_days(r.TIME_LASTINSPECT))&lt;=s.PARA_VALUE 
		and (to_days(now())-to_days(r.TIME_LASTINSPECT))>(s.PARA_VALUE-2))
		or
		((to_days(now())-to_days(r.TIME_LASTINSPECT))&lt;=rs.PARA_VALUE
		and (to_days(now())-to_days(r.TIME_LASTINSPECT))>(rs.PARA_VALUE-2)))
	</select>

	<select id="getRoomNumByPoliid" parameterType="Integer"
		resultType="INTEGER">
		select count(distinct r.ROOM_ID) from
		room as r,building as
		b,community as c
		where
		r.BUIL_ID = b.BUIL_ID
		and
		(c.POLI_ID=#{poli_id,jdbcType=INTEGER}
		or
		b.POLI_ID=#{poli_id,jdbcType=INTEGER})
		and
		c.COMM_ID=b.COMM_ID
	</select>
	
	<select id="searchEmptyRoom" 
		resultMap="PersonInfo">
		select * from (select r.ROOM_ID as ROOM_ID,
		ROOM_UNIT,
		ROOM_FLOOR,
		ROOM_NO,
		ROOM_CLASS,
		ROOM_SUBCLASS,
		COUNT_INSPECT,
		TIME_LASTINSPECT,
		REC_LASTINSPECT,
		r.IS_FOCUS as ROOM_FOCUS,
		r.RAMARK as ROOM_RAMARK,
		PERS_ID,
		PERS_NAME,
		PERS_SEX,
		PERS_IDCARD,
		PERS_PHONE,
		TIME_REGISTER,
		WHY_REGISTER,
		ADDR_CENSUS,
		ADDR_LIVE,
		ADDR_WORK,
		p.IS_FOCUS as PERS_FOCUS,
		p.IS_DELETED as PERS_DELE,
		p.RAMARK as PERS_RAMARK,
		PERS_PHOTO,
		b.BUIL_ID as BUIL_ID,
		c.COMM_ID as COMM_ID,
		BUIL_NAME,
		BUIL_GPSE,
		BUIL_GPSN,
		BUIL_TYPE,
		b.IS_DELETED as BUIL_DELE,
		b.RAMARK as BUIL_RAMARK,
		COMM_NAME from  room as r left join person as p on r.ROOM_ID=p.ROOM_ID  left join building as b on b.BUIL_ID=r.BUIL_ID  left join community as c on c.COMM_ID=b.COMM_ID
		<if test="comm_id!=null">
		where
		b.COMM_ID=#{comm_id,jdbcType=INTEGER}
		</if>
		<if test="buil_id!=null">
		where
		r.BUIL_ID=#{buil_id,jdbcType=INTEGER}
		</if>
		<if test="poli_id!=null">
		where
		c.POLI_ID=#{poli_id,jdbcType=INTEGER}
		</if>
		) as t WHERE t.PERS_ID IS NULL ;
	</select>
	
	<resultMap id="PersonInfo" type="edu.hdu.lab.checkIn.dto.PersonInfo" >
    <id column="PERS_ID" property="persId" jdbcType="INTEGER" />
    <result column="ROOM_ID" property="roomId" jdbcType="INTEGER" />
    <result column="PERS_NAME" property="persName" jdbcType="VARCHAR" />
    <result column="PERS_SEX" property="persSex" jdbcType="BIT" />
    <result column="PERS_IDCARD" property="persIdcard" jdbcType="VARCHAR" />
    <result column="PERS_PHONE" property="persPhone" jdbcType="VARCHAR" />
    <result column="TIME_REGISTER" property="timeRegister" jdbcType="TIMESTAMP" />
    <result column="WHY_REGISTER" property="whyRegister" jdbcType="CHAR" />
    <result column="ADDR_CENSUS" property="addrCensus" jdbcType="VARCHAR" />
    <result column="ADDR_LIVE" property="addrLive" jdbcType="VARCHAR" />
    <result column="ADDR_WORK" property="addrWork" jdbcType="VARCHAR" />
    <result column="PERS_FOCUS" property="persFocus" jdbcType="INTEGER" />
    <result column="PERS_DELE" property="persDele" jdbcType="BIT" />
    <result column="PERS_RAMARK" property="persRamark" jdbcType="VARCHAR" />
    <result column="PERS_PHOTO" property="persPhoto" jdbcType="VARCHAR" />
	<result column="BUIL_ID" property="builId" jdbcType="INTEGER" />
	<result column="ROOM_UNIT" property="roomUnit" jdbcType="INTEGER" />
	<result column="ROOM_FLOOR" property="roomFloor" jdbcType="INTEGER" />
	<result column="ROOM_NO" property="roomNo" jdbcType="CHAR" />
	<result column="ROOM_CLASS" property="roomClass" jdbcType="CHAR" />
	<result column="ROOM_SUBCLASS" property="roomSubclass" jdbcType="CHAR" />
	<result column="COUNT_INSPECT" property="countInspect"
			jdbcType="INTEGER" />
	<result column="TIME_LASTINSPECT" property="timeLastinspect"
			jdbcType="TIMESTAMP" />
	<result column="REC_LASTINSPECT" property="recLastinspect"
			jdbcType="VARCHAR" />
	<result column="ROOM_FOCUS" property="roomFocus" jdbcType="INTEGER" />
	<result column="ROOM_DELE" property="roomDele" jdbcType="BIT" />
	<result column="ROOM_RAMARK" property="roomRamark" jdbcType="VARCHAR" />
	<result column="COMM_ID" property="commId" jdbcType="INTEGER" />
	<result column="POLI_ID" property="poliId" jdbcType="INTEGER" />
	<result column="BUIL_NAME" property="builName" jdbcType="VARCHAR" />
	<result column="BUIL_GPSE" property="builGpse" jdbcType="REAL" />
	<result column="BUIL_GPSN" property="builGpsn" jdbcType="REAL" />
	<result column="BUIL_TYPE" property="builType" jdbcType="CHAR" />
	<result column="BUIL_DELE" property="builDele" jdbcType="BIT" />
	<result column="BUIL_RAMARK" property="builRamark" jdbcType="VARCHAR" />
	<result column="BUIL_NAME" property="builName" jdbcType="VARCHAR" />
  	<result column="COMM_NAME" property="commName" jdbcType="VARCHAR" />
  	<result column="IS_DRUG" property="isDrug" jdbcType="BIT" />
	<result column="IS_BOOM" property="isBoom" jdbcType="BIT" />
	<result column="IS_TOXIC" property="isToxic" jdbcType="BIT" />
	<result column="BUIL_ADDR" property="buil_address" jdbcType="VARCHAR" />
  	<result column="IS_DANGER" property="isDanger" jdbcType="BIT" />
  </resultMap>
  
  <select id="searchRoom" 
		resultMap="PersonInfo">
		select r.ROOM_ID as ROOM_ID,
		ROOM_UNIT,
		ROOM_FLOOR,
		ROOM_NO,
		ROOM_CLASS,
		ROOM_SUBCLASS,
		COUNT_INSPECT,
		TIME_LASTINSPECT,
		REC_LASTINSPECT,
		r.IS_FOCUS as ROOM_FOCUS,
		r.RAMARK as ROOM_RAMARK,
		b.BUIL_ID as BUIL_ID,
		c.COMM_ID as COMM_ID,
		BUIL_NAME,
		BUIL_GPSE,
		BUIL_GPSN,
		BUIL_TYPE,
		BUIL_ADDR,
		PERS_ID,
		PERS_NAME,
		PERS_SEX,
		PERS_IDCARD,
		PERS_PHONE,
		TIME_REGISTER,
		WHY_REGISTER,
		ADDR_CENSUS,
		ADDR_LIVE,
		ADDR_WORK,
		p.IS_FOCUS as PERS_FOCUS,
		p.IS_DELETED as PERS_DELE,
		p.RAMARK as PERS_RAMARK,
		PERS_PHOTO,
		PERS_TYPE,
		b.IS_DELETED as BUIL_DELE,
		b.RAMARK as BUIL_RAMARK,
		IS_DRUG,
		IS_BOOM,
		IS_TOXIC,
		IS_DANGER,
		COMM_NAME from  room as r left join person as p on r.ROOM_ID=p.ROOM_ID left join building as b on b.BUIL_ID=r.BUIL_ID  left join community as c on c.COMM_ID=b.COMM_ID
		<if test="comm_id!=null">
		where
		b.COMM_ID=#{comm_id,jdbcType=INTEGER}
		</if>
		<if test="buil_id!=null">
		where
		r.BUIL_ID=#{buil_id,jdbcType=INTEGER}
		</if>
		<if test="poli_id!=null">
		where
		(c.POLI_ID=#{poli_id,jdbcType=INTEGER}
		or b.POLI_ID=#{poli_id,jdbcType=INTEGER})
		</if>
		<if test="room_class!=null">
		and
		r.ROOM_CLASS=#{room_class,jdbcType=VARCHAR}
		</if>
		<if test="room_subclass!=null">
		and
		r.ROOM_SUBCLASS=#{room_subclass,jdbcType=VARCHAR}
		</if>
		<!-- 重点行业 -->
		<if test="room_isfocus!=null and room_isfocus==1">
		and
		r.IS_FOCUS>0
		</if>
		<!--重点单位查询  -->
		<if test="isDrug!=null and isDrug==1">
		and
		r.IS_DRUG=1
		</if>
		<if test="isBoom!=null and isBoom==1">
		and
		r.IS_BOOM=1
		</if>
		<if test="isToxic!=null and isToxic==1">
		and
		r.IS_TOXIC=1
		</if>
		<if test="isDanger!=null and isDanger==1">
		and
		r.IS_DRUG=1
		</if>
		<if test="focus_level!=null">
		and
		r.IS_FOCUS=#{focus_level,jdbcType=INTEGER}
		</if>
		<if test="pers_type!=null">
		and
		p.PERS_TYPE=#{pers_type,jdbcType=INTEGER}
		</if>
	</select>
	
	<select id="countRoom" 
		resultType="java.lang.Integer">
		select count(distinct r.ROOM_ID)
		from  room as r left join person as p on r.ROOM_ID=p.ROOM_ID left join building as b on b.BUIL_ID=r.BUIL_ID  left join community as c on c.COMM_ID=b.COMM_ID
		<if test="comm_id!=null">
		where
		b.COMM_ID=#{comm_id,jdbcType=INTEGER}
		</if>
		<if test="buil_id!=null">
		where
		r.BUIL_ID=#{buil_id,jdbcType=INTEGER}
		</if>
		<if test="poli_id!=null">
		where
		(c.POLI_ID=#{poli_id,jdbcType=INTEGER}
		or b.POLI_ID=#{poli_id,jdbcType=INTEGER})
		</if>
		<if test="room_class!=null">
		and
		r.ROOM_CLASS=#{room_class,jdbcType=VARCHAR}
		</if>
		<if test="room_subclass!=null">
		and
		r.ROOM_SUBCLASS=#{room_subclass,jdbcType=VARCHAR}
		</if>
		<!-- 重点行业 -->
		<if test="room_isfocus!=null and room_isfocus==1">
		and
		r.IS_FOCUS>0
		</if>
		<!--重点单位查询  -->
		<if test="isDrug!=null and isDrug==1">
		and
		r.IS_DRUG=1
		</if>
		<if test="isBoom!=null and isBoom==1">
		and
		r.IS_BOOM=1
		</if>
		<if test="isToxic!=null and isToxic==1">
		and
		r.IS_TOXIC=1
		</if>
		<if test="isDanger!=null and isDanger==1">
		and
		r.IS_DRUG=1
		</if>
		<if test="focus_level!=null">
		and
		r.IS_FOCUS=#{focus_level,jdbcType=INTEGER}
		</if>
		<if test="pers_type!=null">
		and
		p.PERS_TYPE=#{pers_type,jdbcType=INTEGER}
		</if> 
		<if test="page!=null">
		<if test="size!=null">
			limit ${page},${size}
		</if> 
		</if>
	</select>
	
	<select id="searchRoomOnly" 
		resultMap="PersonInfo">
		select r.ROOM_ID as ROOM_ID,
		ROOM_UNIT,
		ROOM_FLOOR,
		ROOM_NO,
		ROOM_CLASS,
		ROOM_SUBCLASS,
		COUNT_INSPECT,
		TIME_LASTINSPECT,
		REC_LASTINSPECT,
		r.IS_FOCUS as ROOM_FOCUS,
		r.RAMARK as ROOM_RAMARK,
		b.BUIL_ID as BUIL_ID,
		c.COMM_ID as COMM_ID,
		BUIL_NAME,
		BUIL_GPSE,
		BUIL_GPSN,
		BUIL_TYPE,
		BUIL_ADDR,
		b.IS_DELETED as BUIL_DELE,
		b.RAMARK as BUIL_RAMARK,
		IS_DRUG,
		IS_BOOM,
		IS_TOXIC,
		IS_DANGER,
		COMM_NAME from  room as r  left join building as b on b.BUIL_ID=r.BUIL_ID  left join community as c on c.COMM_ID=b.COMM_ID
		<if test="comm_id!=null">
		where
		b.COMM_ID=#{comm_id,jdbcType=INTEGER}
		</if>
		<if test="buil_id!=null">
		where
		r.BUIL_ID=#{buil_id,jdbcType=INTEGER}
		</if>
		<if test="poli_id!=null">
		where
		(c.POLI_ID=#{poli_id,jdbcType=INTEGER}
		or b.POLI_ID=#{poli_id,jdbcType=INTEGER})
		</if>
		<if test="room_class!=null">
		and
		r.ROOM_CLASS=#{room_class,jdbcType=VARCHAR}
		</if>
		<if test="room_subclass!=null">
		and
		r.ROOM_SUBCLASS=#{room_subclass,jdbcType=VARCHAR}
		</if>
		<!-- 重点行业 -->
		<if test="room_isfocus!=null and room_isfocus==1">
		and
		r.IS_FOCUS>0
		</if>
		<!--重点单位查询  -->
		<if test="isDrug!=null and isDrug==1">
		and
		r.IS_DRUG=1
		</if>
		<if test="isBoom!=null and isBoom==1">
		and
		r.IS_BOOM=1
		</if>
		<if test="isToxic!=null and isToxic==1">
		and
		r.IS_TOXIC=1
		</if>
		<if test="isDanger!=null and isDanger==1">
		and
		r.IS_DRUG=1
		</if>
		<if test="focus_level!=null">
		and
		r.IS_FOCUS=#{focus_level,jdbcType=INTEGER}
		</if>
		<if test="page!=null">
		<if test="size!=null">
			limit ${page},${size}
		</if> 
		</if>
	</select>

</mapper>