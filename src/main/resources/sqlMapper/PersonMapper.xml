<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.hdu.lab.checkIn.mapper.PersonMapper" >
  <resultMap id="BaseResultMap" type="edu.hdu.lab.checkIn.model.Person" >
    <id column="PERS_ID" property="persId" jdbcType="INTEGER" />
    <result column="ROOM_ID" property="roomId" jdbcType="INTEGER" />
    <result column="PERS_NAME" property="persName" jdbcType="VARCHAR" />
    <result column="PERS_SEX" property="persSex" jdbcType="BIT" />
    <result column="PERS_IDCARD" property="persIdcard" jdbcType="VARCHAR" />
    <result column="PERS_PHONE" property="persPhone" jdbcType="VARCHAR" />
    <result column="TIME_REGISTER" property="timeRegister" jdbcType="TIMESTAMP" />
    <result column="WHY_REGISTER" property="whyRegister" jdbcType="CHAR" />
    <result column="ADDR_CENSUS" property="addrCensus" jdbcType="VARCHAR" />
    <result column="ADDR_LIVE" property="addrLive" jdbcType="VARCHAR" />
    <result column="ADDR_WORK" property="addrWork" jdbcType="VARCHAR" />
    <result column="IS_FOCUS" property="isFocus" jdbcType="BIT" />
    <result column="IS_DELETED" property="isDeleted" jdbcType="BIT" />
    <result column="RAMARK" property="ramark" jdbcType="VARCHAR" />
    <result column="PERS_PHOTO" property="persPhoto" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    PERS_ID, ROOM_ID, PERS_NAME, PERS_SEX, PERS_IDCARD, PERS_PHONE, TIME_REGISTER, WHY_REGISTER, 
    ADDR_CENSUS, ADDR_LIVE, ADDR_WORK, IS_FOCUS, IS_DELETED, RAMARK, PERS_PHOTO
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.hdu.lab.checkIn.model.PersonExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from person
    where PERS_ID = #{persId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from person
    where PERS_ID = #{persId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.hdu.lab.checkIn.model.PersonExample" >
    delete from person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.hdu.lab.checkIn.model.Person" >
    insert into person (PERS_ID, ROOM_ID, PERS_NAME, 
      PERS_SEX, PERS_IDCARD, PERS_PHONE, 
      TIME_REGISTER, WHY_REGISTER, ADDR_CENSUS, 
      ADDR_LIVE, ADDR_WORK, IS_FOCUS, 
      IS_DELETED, RAMARK, PERS_PHOTO
      )
    values (#{persId,jdbcType=INTEGER}, #{roomId,jdbcType=INTEGER}, #{persName,jdbcType=VARCHAR}, 
      #{persSex,jdbcType=BIT}, #{persIdcard,jdbcType=VARCHAR}, #{persPhone,jdbcType=VARCHAR}, 
      #{timeRegister,jdbcType=TIMESTAMP}, #{whyRegister,jdbcType=CHAR}, #{addrCensus,jdbcType=VARCHAR}, 
      #{addrLive,jdbcType=VARCHAR}, #{addrWork,jdbcType=VARCHAR}, #{isFocus,jdbcType=BIT}, 
      #{isDeleted,jdbcType=BIT}, #{ramark,jdbcType=VARCHAR}, #{persPhoto,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.hdu.lab.checkIn.model.Person" >
    insert into person
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="persId != null" >
        PERS_ID,
      </if>
      <if test="roomId != null" >
        ROOM_ID,
      </if>
      <if test="persName != null" >
        PERS_NAME,
      </if>
      <if test="persSex != null" >
        PERS_SEX,
      </if>
      <if test="persIdcard != null" >
        PERS_IDCARD,
      </if>
      <if test="persPhone != null" >
        PERS_PHONE,
      </if>
      <if test="timeRegister != null" >
        TIME_REGISTER,
      </if>
      <if test="whyRegister != null" >
        WHY_REGISTER,
      </if>
      <if test="addrCensus != null" >
        ADDR_CENSUS,
      </if>
      <if test="addrLive != null" >
        ADDR_LIVE,
      </if>
      <if test="addrWork != null" >
        ADDR_WORK,
      </if>
      <if test="isFocus != null" >
        IS_FOCUS,
      </if>
      <if test="isDeleted != null" >
        IS_DELETED,
      </if>
      <if test="ramark != null" >
        RAMARK,
      </if>
      <if test="persPhoto != null" >
        PERS_PHOTO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="persId != null" >
        #{persId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null" >
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="persName != null" >
        #{persName,jdbcType=VARCHAR},
      </if>
      <if test="persSex != null" >
        #{persSex,jdbcType=BIT},
      </if>
      <if test="persIdcard != null" >
        #{persIdcard,jdbcType=VARCHAR},
      </if>
      <if test="persPhone != null" >
        #{persPhone,jdbcType=VARCHAR},
      </if>
      <if test="timeRegister != null" >
        #{timeRegister,jdbcType=TIMESTAMP},
      </if>
      <if test="whyRegister != null" >
        #{whyRegister,jdbcType=CHAR},
      </if>
      <if test="addrCensus != null" >
        #{addrCensus,jdbcType=VARCHAR},
      </if>
      <if test="addrLive != null" >
        #{addrLive,jdbcType=VARCHAR},
      </if>
      <if test="addrWork != null" >
        #{addrWork,jdbcType=VARCHAR},
      </if>
      <if test="isFocus != null" >
        #{isFocus,jdbcType=BIT},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="ramark != null" >
        #{ramark,jdbcType=VARCHAR},
      </if>
      <if test="persPhoto != null" >
        #{persPhoto,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.hdu.lab.checkIn.model.PersonExample" resultType="java.lang.Integer" >
    select count(*) from person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update person
    <set >
      <if test="record.persId != null" >
        PERS_ID = #{record.persId,jdbcType=INTEGER},
      </if>
      <if test="record.roomId != null" >
        ROOM_ID = #{record.roomId,jdbcType=INTEGER},
      </if>
      <if test="record.persName != null" >
        PERS_NAME = #{record.persName,jdbcType=VARCHAR},
      </if>
      <if test="record.persSex != null" >
        PERS_SEX = #{record.persSex,jdbcType=BIT},
      </if>
      <if test="record.persIdcard != null" >
        PERS_IDCARD = #{record.persIdcard,jdbcType=VARCHAR},
      </if>
      <if test="record.persPhone != null" >
        PERS_PHONE = #{record.persPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.timeRegister != null" >
        TIME_REGISTER = #{record.timeRegister,jdbcType=TIMESTAMP},
      </if>
      <if test="record.whyRegister != null" >
        WHY_REGISTER = #{record.whyRegister,jdbcType=CHAR},
      </if>
      <if test="record.addrCensus != null" >
        ADDR_CENSUS = #{record.addrCensus,jdbcType=VARCHAR},
      </if>
      <if test="record.addrLive != null" >
        ADDR_LIVE = #{record.addrLive,jdbcType=VARCHAR},
      </if>
      <if test="record.addrWork != null" >
        ADDR_WORK = #{record.addrWork,jdbcType=VARCHAR},
      </if>
      <if test="record.isFocus != null" >
        IS_FOCUS = #{record.isFocus,jdbcType=BIT},
      </if>
      <if test="record.isDeleted != null" >
        IS_DELETED = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.ramark != null" >
        RAMARK = #{record.ramark,jdbcType=VARCHAR},
      </if>
      <if test="record.persPhoto != null" >
        PERS_PHOTO = #{record.persPhoto,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update person
    set PERS_ID = #{record.persId,jdbcType=INTEGER},
      ROOM_ID = #{record.roomId,jdbcType=INTEGER},
      PERS_NAME = #{record.persName,jdbcType=VARCHAR},
      PERS_SEX = #{record.persSex,jdbcType=BIT},
      PERS_IDCARD = #{record.persIdcard,jdbcType=VARCHAR},
      PERS_PHONE = #{record.persPhone,jdbcType=VARCHAR},
      TIME_REGISTER = #{record.timeRegister,jdbcType=TIMESTAMP},
      WHY_REGISTER = #{record.whyRegister,jdbcType=CHAR},
      ADDR_CENSUS = #{record.addrCensus,jdbcType=VARCHAR},
      ADDR_LIVE = #{record.addrLive,jdbcType=VARCHAR},
      ADDR_WORK = #{record.addrWork,jdbcType=VARCHAR},
      IS_FOCUS = #{record.isFocus,jdbcType=BIT},
      IS_DELETED = #{record.isDeleted,jdbcType=BIT},
      RAMARK = #{record.ramark,jdbcType=VARCHAR},
      PERS_PHOTO = #{record.persPhoto,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.hdu.lab.checkIn.model.Person" >
    update person
    <set >
      <if test="roomId != null" >
        ROOM_ID = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="persName != null" >
        PERS_NAME = #{persName,jdbcType=VARCHAR},
      </if>
      <if test="persSex != null" >
        PERS_SEX = #{persSex,jdbcType=BIT},
      </if>
      <if test="persIdcard != null" >
        PERS_IDCARD = #{persIdcard,jdbcType=VARCHAR},
      </if>
      <if test="persPhone != null" >
        PERS_PHONE = #{persPhone,jdbcType=VARCHAR},
      </if>
      <if test="timeRegister != null" >
        TIME_REGISTER = #{timeRegister,jdbcType=TIMESTAMP},
      </if>
      <if test="whyRegister != null" >
        WHY_REGISTER = #{whyRegister,jdbcType=CHAR},
      </if>
      <if test="addrCensus != null" >
        ADDR_CENSUS = #{addrCensus,jdbcType=VARCHAR},
      </if>
      <if test="addrLive != null" >
        ADDR_LIVE = #{addrLive,jdbcType=VARCHAR},
      </if>
      <if test="addrWork != null" >
        ADDR_WORK = #{addrWork,jdbcType=VARCHAR},
      </if>
      <if test="isFocus != null" >
        IS_FOCUS = #{isFocus,jdbcType=BIT},
      </if>
      <if test="isDeleted != null" >
        IS_DELETED = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="ramark != null" >
        RAMARK = #{ramark,jdbcType=VARCHAR},
      </if>
      <if test="persPhoto != null" >
        PERS_PHOTO = #{persPhoto,jdbcType=VARCHAR},
      </if>
    </set>
    where PERS_ID = #{persId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.hdu.lab.checkIn.model.Person" >
    update person
    set ROOM_ID = #{roomId,jdbcType=INTEGER},
      PERS_NAME = #{persName,jdbcType=VARCHAR},
      PERS_SEX = #{persSex,jdbcType=BIT},
      PERS_IDCARD = #{persIdcard,jdbcType=VARCHAR},
      PERS_PHONE = #{persPhone,jdbcType=VARCHAR},
      TIME_REGISTER = #{timeRegister,jdbcType=TIMESTAMP},
      WHY_REGISTER = #{whyRegister,jdbcType=CHAR},
      ADDR_CENSUS = #{addrCensus,jdbcType=VARCHAR},
      ADDR_LIVE = #{addrLive,jdbcType=VARCHAR},
      ADDR_WORK = #{addrWork,jdbcType=VARCHAR},
      IS_FOCUS = #{isFocus,jdbcType=BIT},
      IS_DELETED = #{isDeleted,jdbcType=BIT},
      RAMARK = #{ramark,jdbcType=VARCHAR},
      PERS_PHOTO = #{persPhoto,jdbcType=VARCHAR}
    where PERS_ID = #{persId,jdbcType=INTEGER}
  </update>
  
  <select id="getPersonByRoomId" parameterType="Integer" resultMap="BaseResultMap">
  	SELECT * 
	FROM person
	WHERE ROOM_ID = #{room_id,jdbcType=INTEGER}	
  </select>
  
  <select id="searchPerson" 
		resultMap="PersonInfo">
		<if test="is_overdue!=null and is_overdue==1">
		select * from (
		</if> 
		select r.ROOM_ID as ROOM_ID,
		ROOM_UNIT,
		ROOM_FLOOR,
		ROOM_NO,
		ROOM_CLASS,
		ROOM_SUBCLASS,
		COUNT_INSPECT,
		TIME_LASTINSPECT,
		REC_LASTINSPECT,
		r.IS_FOCUS as ROOM_FOCUS,
		r.RAMARK as ROOM_RAMARK,
		PERS_ID,
		PERS_NAME,
		PERS_SEX,
		PERS_IDCARD,
		PERS_PHONE,
		TIME_REGISTER,
		WHY_REGISTER,
		ADDR_CENSUS,
		ADDR_LIVE,
		ADDR_WORK,
		p.IS_FOCUS as PERS_FOCUS,
		p.IS_DELETED as PERS_DELE,
		p.RAMARK as PERS_RAMARK,
		PERS_PHOTO,
		b.BUIL_ID as BUIL_ID,
		c.COMM_ID as COMM_ID,
		BUIL_NAME,
		BUIL_GPSE,
		BUIL_GPSN,
		BUIL_TYPE,
		b.IS_DELETED as BUIL_DELE,
		b.RAMARK as BUIL_RAMARK,
		COMM_NAME
		from
		person as p left join room as r on p.ROOM_ID=r.ROOM_ID
		left join building as b on r.BUIL_ID=b.BUIL_ID 
		left join community as c on c.COMM_ID=b.COMM_ID
		where
		(c.POLI_ID=#{poli_id,jdbcType=INTEGER}
		or
		b.POLI_ID=#{poli_id,jdbcType=INTEGER})
		and
		c.COMM_ID=b.COMM_ID
		and
		r.BUIL_ID=b.BUIL_ID
		and 
		p.ROOM_ID=r.ROOM_ID
		<if test="comm_id!=null">
		and
		b.COMM_ID=#{comm_id,jdbcType=INTEGER}
		</if>
		<if test="buil_id!=null">
		and
		r.BUIL_ID=#{buil_id,jdbcType=INTEGER}
		</if>
		<if test="unit!=null">
		and
		r.ROOM_UNIT=#{room_unit,jdbcType=INTEGER}
		</if>
		<if test="floor!=null">
		and
		r.ROOM_FLOOR=#{room_floor,jdbcType=INTEGER}
		</if>
		<if test="room_no!=null">
		and
		r.ROOM_NO=#{room_no,jdbcType=VARCHAR}
		</if>
		<if test="room_class!=null">
		and
		r.ROOM_CLASS=#{room_class,jdbcType=VARCHAR}
		</if>
		<if test="room_subclass!=null">
		and
		r.ROOM_SUBCLASS=#{room_subclass,jdbcType=VARCHAR}
		</if>
		<!-- 超期未巡检 -->
		
		<!-- 人员信息 -->
		<if test="pers_name!=null">
		and
		p.PERS_NAME=#{pers_name,jdbcType=VARCHAR}
		</if>
		<if test="pers_sex!=null">
		and
		p.PERS_SEX=#{pers_sex,jdbcType=BIT}
		</if>
		<if test="pers_idcard!=null">
		and
		p.PERS_IDCARD=#{pers_idcard,jdbcType=VARCHAR}
		</if>
		<if test="pers_phone!=null">
		and
		p.PERS_PHONE=#{pers_phone,jdbcType=VARCHAR}
		</if>
		<if test="startTime!=null">
		<if test="endtTime!=null">
		and p.TIME_REGISTER &gt;=
		#{startTime,jdbcType=TIMESTAMP}
		and p.TIME_REGISTER &lt;=
		#{endTime,jdbcType=TIMESTAMP}
		</if>
		</if>
		<if test="why_register!=null">
		and
		p.WHY_REGISTER=#{why_register,jdbcType=VARCHAR}
		</if>
		<if test="is_focus!=null and is_focus==1">
		and
		p.IS_FOCUS>0
		</if>
		<if test="focus_level!=null">
		and
		p.IS_FOCUS=#{focus_level,jdbcType=INTEGER}
		</if>
		<if test="page!=null">
		<if test="size!=null">
			limit ${page},${size}
		</if> 
		</if>
		<if test="is_overdue!=null and is_overdue==1">
		)as t left join sysparam as s on s.PARA_ID=t.PERS_FOCUS left join roomsysparam as rs on rs.PARA_ID=t.ROOM_FOCUS
		where ((to_days(now())-to_days(t.TIME_LASTINSPECT))>s.PARA_VALUE or
		(to_days(now())-to_days(t.TIME_LASTINSPECT))>rs.PARA_VALUE)
		</if> 
	</select>
	
	<resultMap id="PersonInfo" type="edu.hdu.lab.checkIn.dto.PersonInfo" >
    <id column="PERS_ID" property="persId" jdbcType="INTEGER" />
    <result column="ROOM_ID" property="roomId" jdbcType="INTEGER" />
    <result column="PERS_NAME" property="persName" jdbcType="VARCHAR" />
    <result column="PERS_SEX" property="persSex" jdbcType="BIT" />
    <result column="PERS_IDCARD" property="persIdcard" jdbcType="VARCHAR" />
    <result column="PERS_PHONE" property="persPhone" jdbcType="VARCHAR" />
    <result column="TIME_REGISTER" property="timeRegister" jdbcType="TIMESTAMP" />
    <result column="WHY_REGISTER" property="whyRegister" jdbcType="CHAR" />
    <result column="ADDR_CENSUS" property="addrCensus" jdbcType="VARCHAR" />
    <result column="ADDR_LIVE" property="addrLive" jdbcType="VARCHAR" />
    <result column="ADDR_WORK" property="addrWork" jdbcType="VARCHAR" />
    <result column="PERS_FOCUS" property="persFocus" jdbcType="INTEGER" />
    <result column="PERS_DELE" property="persDele" jdbcType="BIT" />
    <result column="PERS_RAMARK" property="persRamark" jdbcType="VARCHAR" />
    <result column="PERS_PHOTO" property="persPhoto" jdbcType="VARCHAR" />
	<result column="BUIL_ID" property="builId" jdbcType="INTEGER" />
	<result column="ROOM_UNIT" property="roomUnit" jdbcType="INTEGER" />
	<result column="ROOM_FLOOR" property="roomFloor" jdbcType="INTEGER" />
	<result column="ROOM_NO" property="roomNo" jdbcType="CHAR" />
	<result column="ROOM_CLASS" property="roomClass" jdbcType="CHAR" />
	<result column="ROOM_SUBCLASS" property="roomSubclass" jdbcType="CHAR" />
	<result column="COUNT_INSPECT" property="countInspect"
			jdbcType="INTEGER" />
	<result column="TIME_LASTINSPECT" property="timeLastinspect"
			jdbcType="TIMESTAMP" />
	<result column="REC_LASTINSPECT" property="recLastinspect"
			jdbcType="VARCHAR" />
	<result column="ROOM_FOCUS" property="roomFocus" jdbcType="INTEGER" />
	<result column="ROOM_DELE" property="roomDele" jdbcType="BIT" />
	<result column="ROOM_RAMARK" property="roomRamark" jdbcType="VARCHAR" />
	<result column="COMM_ID" property="commId" jdbcType="INTEGER" />
	<result column="POLI_ID" property="poliId" jdbcType="INTEGER" />
	<result column="BUIL_NAME" property="builName" jdbcType="VARCHAR" />
	<result column="BUIL_GPSE" property="builGpse" jdbcType="REAL" />
	<result column="BUIL_GPSN" property="builGpsn" jdbcType="REAL" />
	<result column="BUIL_TYPE" property="builType" jdbcType="CHAR" />
	<result column="BUIL_DELE" property="builDele" jdbcType="BIT" />
	<result column="BUIL_RAMARK" property="builRamark" jdbcType="VARCHAR" />
	<result column="BUIL_NAME" property="builName" jdbcType="VARCHAR" />
  	<result column="COMM_NAME" property="commName" jdbcType="VARCHAR" />
  </resultMap>
	
	<select id="searchSize" 
		resultType="java.lang.Integer">
		select count(*) from (
		select r.ROOM_ID as ROOM_ID,
		ROOM_UNIT,
		ROOM_FLOOR,
		ROOM_NO,
		ROOM_CLASS,
		ROOM_SUBCLASS,
		COUNT_INSPECT,
		TIME_LASTINSPECT,
		REC_LASTINSPECT,
		r.IS_FOCUS as ROOM_FOCUS,
		r.RAMARK as ROOM_RAMARK,
		PERS_ID,
		PERS_NAME,
		PERS_SEX,
		PERS_IDCARD,
		PERS_PHONE,
		TIME_REGISTER,
		WHY_REGISTER,
		ADDR_CENSUS,
		ADDR_LIVE,
		ADDR_WORK,
		p.IS_FOCUS as PERS_FOCUS,
		p.IS_DELETED as PERS_DELE,
		p.RAMARK as PERS_RAMARK,
		PERS_PHOTO,
		b.BUIL_ID as BUIL_ID,
		c.COMM_ID as COMM_ID,
		BUIL_NAME,
		BUIL_GPSE,
		BUIL_GPSN,
		BUIL_TYPE,
		b.IS_DELETED as BUIL_DELE,
		b.RAMARK as BUIL_RAMARK,
		COMM_NAME
		from
		room as r ,building as b,community as c,person as p
		where
		(c.POLI_ID=#{poli_id,jdbcType=INTEGER}
		or
		b.POLI_ID=#{poli_id,jdbcType=INTEGER})
		and
		c.COMM_ID=b.COMM_ID
		and
		r.BUIL_ID=b.BUIL_ID
		and 
		p.ROOM_ID=r.ROOM_ID
		<if test="comm_id!=null">
		and
		b.COMM_ID=#{comm_id,jdbcType=INTEGER}
		</if>
		<if test="buil_id!=null">
		and
		r.BUIL_ID=#{buil_id,jdbcType=INTEGER}
		</if>
		<if test="unit!=null">
		and
		r.ROOM_UNIT=#{room_unit,jdbcType=INTEGER}
		</if>
		<if test="floor!=null">
		and
		r.ROOM_FLOOR=#{room_floor,jdbcType=INTEGER}
		</if>
		<if test="room_no!=null">
		and
		r.ROOM_NO=#{room_no,jdbcType=VARCHAR}
		</if>
		<if test="room_class!=null">
		and
		r.ROOM_CLASS=#{room_class,jdbcType=VARCHAR}
		</if>
		<if test="room_subclass!=null">
		and
		r.ROOM_SUBCLASS=#{room_subclass,jdbcType=VARCHAR}
		</if>
		<!-- 超期未巡检 -->
		
		<!-- 人员信息 -->
		<if test="pers_name!=null">
		and
		p.PERS_NAME=#{pers_name,jdbcType=VARCHAR}
		</if>
		<if test="pers_sex!=null">
		and
		p.PERS_SEX=#{pers_sex,jdbcType=BIT}
		</if>
		<if test="pers_idcard!=null">
		and
		p.PERS_IDCARD=#{pers_idcard,jdbcType=VARCHAR}
		</if>
		<if test="pers_phone!=null">
		and
		p.PERS_PHONE=#{pers_phone,jdbcType=VARCHAR}
		</if>
		<if test="startTime!=null">
		<if test="endtTime!=null">
		and p.TIME_REGISTER &gt;=
		#{startTime,jdbcType=TIMESTAMP}
		and p.TIME_REGISTER &lt;=
		#{endTime,jdbcType=TIMESTAMP}
		</if>
		</if>
		<if test="why_register!=null">
		and
		p.WHY_REGISTER=#{why_register,jdbcType=VARCHAR}
		</if>
		<if test="is_focus!=null and is_focus==1">
		and
		p.IS_FOCUS>0
		</if>
		<if test="focus_level!=null">
		and
		p.IS_FOCUS=#{focus_level,jdbcType=INTEGER}
		</if>
		<if test="page!=null">
		<if test="size!=null">
			limit ${page},${size}
		</if> 
		</if>
		)as t
		<if test="is_overdue!=null and is_overdue==1">
		 left join sysparam as s on s.PARA_ID=t.PERS_FOCUS left join roomsysparam as rs on rs.PARA_ID=t.ROOM_FOCUS
		where ((to_days(now())-to_days(t.TIME_LASTINSPECT))>s.PARA_VALUE or
		(to_days(now())-to_days(t.TIME_LASTINSPECT))>rs.PARA_VALUE)
		 </if> 
	</select>
	
	<!-- 根据POLI_ID获取未巡检人员 -->
	<select id="getOverPersbyPoliid"
		resultMap="PersonInfo">
		(select r.ROOM_ID as ROOM_ID,
		ROOM_UNIT,
		ROOM_FLOOR,
		ROOM_NO,
		ROOM_CLASS,
		ROOM_SUBCLASS,
		COUNT_INSPECT,
		TIME_LASTINSPECT,
		REC_LASTINSPECT,
		r.IS_FOCUS as ROOM_FOCUS,
		r.RAMARK as ROOM_RAMARK,
		PERS_ID,
		PERS_NAME,
		PERS_SEX,
		PERS_IDCARD,
		PERS_PHONE,
		TIME_REGISTER,
		WHY_REGISTER,
		ADDR_CENSUS,
		ADDR_LIVE,
		ADDR_WORK,
		p.IS_FOCUS as PERS_FOCUS,
		p.IS_DELETED as PERS_DELE,
		p.RAMARK as PERS_RAMARK,
		PERS_PHOTO,
		b.BUIL_ID as BUIL_ID,
		c.COMM_ID as COMM_ID,
		BUIL_NAME,
		BUIL_GPSE,
		BUIL_GPSN,
		BUIL_TYPE,
		b.IS_DELETED as BUIL_DELE,
		b.RAMARK as BUIL_RAMARK,
		COMM_NAME
		from room as r left join building as b
		 on r.BUIL_ID=b.BUIL_ID left join community as
		c on c.COMM_ID=b.COMM_ID left join person as p on p.ROOM_ID=r.ROOM_ID left join sysparam
		as s on s.PARA_ID=p.IS_FOCUS left join roomsysparam as rs on rs.PARA_ID=r.IS_FOCUS
		where
		(c.POLI_ID=#{poli_id,jdbcType=INTEGER} or
		b.POLI_ID=#{poli_id,jdbcType=INTEGER}) and
		r.BUIL_ID=b.BUIL_ID 
		and c.COMM_ID=b.COMM_ID and
		((to_days(now())-to_days(r.TIME_LASTINSPECT))>s.PARA_VALUE or
		(to_days(now())-to_days(r.TIME_LASTINSPECT))>rs.PARA_VALUE
		)
		 order by ROOM_FOCUS desc)order by PERS_FOCUS desc
		 <if test="page!=null">
		<if test="size!=null">
			limit ${page},${size}
		</if> 
		</if>;
	</select>

	<select id="getQuickOverPersbyPoliid" 
		resultMap="PersonInfo">
		(select r.ROOM_ID as ROOM_ID,
		ROOM_UNIT,
		ROOM_FLOOR,
		ROOM_NO,
		ROOM_CLASS,
		ROOM_SUBCLASS,
		COUNT_INSPECT,
		TIME_LASTINSPECT,
		REC_LASTINSPECT,
		r.IS_FOCUS as ROOM_FOCUS,
		r.RAMARK as ROOM_RAMARK,
		PERS_ID,
		PERS_NAME,
		PERS_SEX,
		PERS_IDCARD,
		PERS_PHONE,
		TIME_REGISTER,
		WHY_REGISTER,
		ADDR_CENSUS,
		ADDR_LIVE,
		ADDR_WORK,
		p.IS_FOCUS as PERS_FOCUS,
		p.IS_DELETED as PERS_DELE,
		p.RAMARK as PERS_RAMARK,
		PERS_PHOTO,
		b.BUIL_ID as BUIL_ID,
		c.COMM_ID as COMM_ID,
		BUIL_NAME,
		BUIL_GPSE,
		BUIL_GPSN,
		BUIL_TYPE,
		b.IS_DELETED as BUIL_DELE,
		b.RAMARK as BUIL_RAMARK,
		COMM_NAME from room as r left join building as b
		 on r.BUIL_ID=b.BUIL_ID left join community as
		c on c.COMM_ID=b.COMM_ID left join person as p on p.ROOM_ID=r.ROOM_ID left join sysparam
		as s on s.PARA_ID=p.IS_FOCUS left join roomsysparam as rs on rs.PARA_ID=r.IS_FOCUS
		where
		(c.POLI_ID=#{poli_id,jdbcType=INTEGER} or
		b.POLI_ID=#{poli_id,jdbcType=INTEGER}) and
		r.BUIL_ID=b.BUIL_ID 
		and c.COMM_ID=b.COMM_ID and
		(((to_days(now())-to_days(r.TIME_LASTINSPECT))&lt;=s.PARA_VALUE 
		and (to_days(now())-to_days(r.TIME_LASTINSPECT))>(s.PARA_VALUE-2))
		or
		((to_days(now())-to_days(r.TIME_LASTINSPECT))&lt;=rs.PARA_VALUE
		and (to_days(now())-to_days(r.TIME_LASTINSPECT))>(rs.PARA_VALUE-2)))
		order by ROOM_FOCUS desc)order by PERS_FOCUS desc
		<if test="page!=null">
		<if test="size!=null">
			limit ${page},${size}
		</if> 
		</if>;
	</select>
	
</mapper>